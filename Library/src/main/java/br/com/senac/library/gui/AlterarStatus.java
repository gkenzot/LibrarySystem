/*
 * Copyright (C) 2024 kenzo
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package br.com.senac.library.gui;

import br.com.senac.library.dao.EmprestimoDAO;
import br.com.senac.library.dao.LivroDAO;
import br.com.senac.library.dao.UsuarioDAO;
import br.com.senac.library.model.Emprestimo;
import br.com.senac.library.model.Livro;
import br.com.senac.library.model.Usuario;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JOptionPane;

/**
 *
 * @author kenzo
 */
public class AlterarStatus extends javax.swing.JFrame {

    /**
     * Creates new form AlterarStatus
     */
    public AlterarStatus() {
        initComponents();
    }

    private Livro livroSelected;

    void preencheAlterarStatus(Livro livro, Usuario usuario, Emprestimo emprestimo) {
        txtIdLivro.setText(String.valueOf(livro.getId()));
        txtTitulo.setText(livro.getTitulo());
        txtStatus.setText(livro.getStatus());

        if (usuario != null) {
            txtIdUsuario.setText(String.valueOf(usuario.getId()));
            txtNomeUsuario.setText(usuario.getNome());
        } else {
            txtIdUsuario.setText("");
            txtNomeUsuario.setText("");
        }

        if (emprestimo != null) {
            SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
            fmtDataEmprestimo.setText(dateFormat.format(emprestimo.getDataEmprestimo()));
            fmtDataDevolucao.setText(dateFormat.format(emprestimo.getDataDevolucao()));
        } else {
            fmtDataEmprestimo.setText("");
            fmtDataDevolucao.setText("");
        }
        
        this.livroSelected = livro;

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        btnPesquisar = new javax.swing.JButton();
        btnEmprestar = new javax.swing.JButton();
        btnDevolver = new javax.swing.JButton();
        txtIdUsuario = new javax.swing.JTextField();
        txtNomeUsuario = new javax.swing.JTextField();
        txtIdLivro = new javax.swing.JTextField();
        txtTitulo = new javax.swing.JTextField();
        txtStatus = new javax.swing.JTextField();
        fmtDataEmprestimo = new javax.swing.JFormattedTextField();
        fmtDataDevolucao = new javax.swing.JFormattedTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("LS - Alterar Status");

        jLabel1.setText("ID Usuario");

        jLabel2.setText("ID Livro");

        jLabel3.setText("Titulo Livro");

        jLabel4.setText("Status");

        jLabel5.setText("Data Emprestimo");

        jLabel6.setText("Data Devolução");

        btnPesquisar.setText("Pesquisar");
        btnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarActionPerformed(evt);
            }
        });

        btnEmprestar.setText("Emprestar");
        btnEmprestar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEmprestarActionPerformed(evt);
            }
        });

        btnDevolver.setText("Devolver");
        btnDevolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDevolverActionPerformed(evt);
            }
        });

        txtNomeUsuario.setEditable(false);

        txtIdLivro.setEditable(false);

        txtTitulo.setEditable(false);

        txtStatus.setEditable(false);

        fmtDataEmprestimo.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getDateInstance(java.text.DateFormat.SHORT))));

        fmtDataDevolucao.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getDateInstance(java.text.DateFormat.SHORT))));

        jLabel7.setText("Nome Usuario");

        jLabel8.setText("ex. 21/09/2023");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtIdLivro, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(fmtDataEmprestimo, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtStatus, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(fmtDataDevolucao, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel8))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtIdUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnPesquisar))
                            .addComponent(txtNomeUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnEmprestar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDevolver))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtIdUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPesquisar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtNomeUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtIdLivro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(fmtDataEmprestimo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(fmtDataDevolucao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEmprestar)
                    .addComponent(btnDevolver))
                .addContainerGap())
        );

        btnPesquisar.getAccessibleContext().setAccessibleDescription("botao de pesquisar usuário pelo id");
        btnEmprestar.getAccessibleContext().setAccessibleDescription("botao para confirmar o emprestimo");
        btnDevolver.getAccessibleContext().setAccessibleDescription("botao para confirmar a devolução do emprestimo");
        txtIdUsuario.getAccessibleContext().setAccessibleName("ID do Usuário");
        txtIdUsuario.getAccessibleContext().setAccessibleDescription("campo para preencher o id do usuário");
        txtNomeUsuario.getAccessibleContext().setAccessibleName("Nome do Usuário");
        txtNomeUsuario.getAccessibleContext().setAccessibleDescription("o usuário pertencente ao id do campo id usuário");
        txtIdLivro.getAccessibleContext().setAccessibleName("id do livro");
        txtIdLivro.getAccessibleContext().setAccessibleDescription("campo com o id do livro selecionado");
        txtTitulo.getAccessibleContext().setAccessibleName("titulo livro");
        txtTitulo.getAccessibleContext().setAccessibleDescription("campo com o titulo do livro selecionado");
        txtStatus.getAccessibleContext().setAccessibleName("status livro");
        txtStatus.getAccessibleContext().setAccessibleDescription("campo com o status do livro no momento");
        fmtDataEmprestimo.getAccessibleContext().setAccessibleName("data emprestimo");
        fmtDataEmprestimo.getAccessibleContext().setAccessibleDescription("data que o livro sera ou foi emprestado");
        fmtDataDevolucao.getAccessibleContext().setAccessibleName("data devolução");
        fmtDataDevolucao.getAccessibleContext().setAccessibleDescription("data com que o livro foi ou sera devolvido");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel1.getAccessibleContext().setAccessibleName("Painel Alterar Status");
        jPanel1.getAccessibleContext().setAccessibleDescription("formulário para emprestar ou devolver livros");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarActionPerformed
        String idTexto = txtIdUsuario.getText().trim();
        if (!idTexto.isEmpty()) {
            try {
                int id = Integer.parseInt(idTexto);
                UsuarioDAO usuarioDAO = new UsuarioDAO();
                Usuario usuario = usuarioDAO.obter(id);

                if (usuario != null) {
                    txtNomeUsuario.setText(usuario.getNome());
                } else {
                    txtNomeUsuario.setText("Usuário Não Encontrado");
                }

            } catch (NumberFormatException e) {
                // Tratar caso o texto não seja um número válido
                txtNomeUsuario.setText("ID Inválido");
            } catch (Exception e) {
                // Tratar outras exceções, se necessário
                txtNomeUsuario.setText("Erro ao buscar usuário");
            }
        } else {
            txtNomeUsuario.setText("ID não pode estar vazio");
        }
    }//GEN-LAST:event_btnPesquisarActionPerformed

    private void btnEmprestarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEmprestarActionPerformed
        // Verifica se todos os campos necessários estão preenchidos
        if (txtIdUsuario.getText().isEmpty() || txtIdLivro.getText().isEmpty()
                || txtStatus.getText().isEmpty() || fmtDataEmprestimo.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Preencha todos os campos necessários.", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            // Obtém os dados dos campos
            int idUsuario = Integer.parseInt(txtIdUsuario.getText().trim());
            int idLivro = Integer.parseInt(txtIdLivro.getText().trim());
            Date dataEmprestimo = (Date) fmtDataEmprestimo.getValue();

            // Calcula a data de devolução como 14 dias após a data de empréstimo
            Calendar calendar = Calendar.getInstance();
            calendar.setTime(dataEmprestimo);
            calendar.add(Calendar.DAY_OF_YEAR, 14);
            Date dataDevolucao = calendar.getTime();

            // Busca o usuário e o livro no banco de dados
            UsuarioDAO usuarioDAO = new UsuarioDAO();
            Usuario usuario = usuarioDAO.obter(idUsuario);

            LivroDAO livroDAO = new LivroDAO();
            Livro livro = livroDAO.obter(idLivro);

            // Verifica se usuário e livro foram encontrados
            if (usuario == null) {
                JOptionPane.showMessageDialog(this, "Usuário não encontrado.", "Erro", JOptionPane.ERROR_MESSAGE);
                return;
            }
            if (livro == null) {
                JOptionPane.showMessageDialog(this, "Livro não encontrado.", "Erro", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Cria o empréstimo
            Emprestimo emprestimo = new Emprestimo();
            emprestimo.setUsuario(usuario);
            emprestimo.setLivro(livro);
            emprestimo.setDataEmprestimo(dataEmprestimo);
            emprestimo.setDataDevolucao(dataDevolucao);

            // Salva o empréstimo no banco de dados
            EmprestimoDAO emprestimoDAO = new EmprestimoDAO();
            emprestimoDAO.cadastrar(emprestimo);

            // Atualiza o status do livro para "Emprestado"
            livro.setStatus("emprestado");
            livroDAO.atualizar(livro);

            // Atualiza a interface gráfica com as informações do livro
            txtStatus.setText(livro.getStatus());
            fmtDataDevolucao.setValue(dataDevolucao);

            JOptionPane.showMessageDialog(this, "Empréstimo realizado com sucesso.");

            dispose();
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "ID de usuário e livro devem ser números válidos.", "Erro", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro ao realizar o empréstimo: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnEmprestarActionPerformed

    private void btnDevolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDevolverActionPerformed
        try {
            // Verifica se há um livro selecionado
            if (livroSelected == null) {
                JOptionPane.showMessageDialog(this, "Selecione um livro para devolver.", "Erro", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Obtém a data de devolução do campo fmtDataDevolucao
            Date dataDevolucao = (Date) fmtDataDevolucao.getValue();

            // Atualiza o status do livro para disponível
            livroSelected.setStatus("disponivel");

            // Atualiza o empréstimo no banco de dados
            EmprestimoDAO emprestimoDAO = new EmprestimoDAO();
            Emprestimo emprestimo = emprestimoDAO.obterPorLivro(livroSelected.getId());

            if (emprestimo != null) {
                emprestimo.setDataDevolucao(dataDevolucao);
                emprestimoDAO.atualizar(emprestimo);
            } else {
                JOptionPane.showMessageDialog(this, "Não foi possível encontrar o empréstimo para este livro.", "Erro", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Atualiza o status do livro no banco de dados
            LivroDAO livroDAO = new LivroDAO();
            livroDAO.atualizar(livroSelected);

            // Atualiza a interface gráfica com as informações do livro
            txtStatus.setText(livroSelected.getStatus());

            JOptionPane.showMessageDialog(this, "Livro devolvido com sucesso.");

            dispose(); // Fecha a janela de devolução
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Ocorreu uma falha:\n" + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Ocorreu um erro ao devolver o livro:\n" + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnDevolverActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AlterarStatus.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AlterarStatus.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AlterarStatus.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AlterarStatus.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new AlterarStatus().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDevolver;
    private javax.swing.JButton btnEmprestar;
    private javax.swing.JButton btnPesquisar;
    private javax.swing.JFormattedTextField fmtDataDevolucao;
    private javax.swing.JFormattedTextField fmtDataEmprestimo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txtIdLivro;
    private javax.swing.JTextField txtIdUsuario;
    private javax.swing.JTextField txtNomeUsuario;
    private javax.swing.JTextField txtStatus;
    private javax.swing.JTextField txtTitulo;
    // End of variables declaration//GEN-END:variables
}
